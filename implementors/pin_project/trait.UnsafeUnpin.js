(function() {var implementors = {};
implementors["opentelemetry"] = [{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"opentelemetry/api/trace/futures/struct.WithContext.html\" title=\"struct opentelemetry::api::trace::futures::WithContext\">WithContext</a>&lt;T&gt;","synthetic":false,"types":["opentelemetry::api::trace::futures::WithContext"]}];
implementors["tracing_futures"] = [{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"tracing_futures/struct.Instrumented.html\" title=\"struct tracing_futures::Instrumented\">Instrumented</a>&lt;T&gt;","synthetic":false,"types":["tracing_futures::Instrumented"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"tracing_futures/struct.WithDispatch.html\" title=\"struct tracing_futures::WithDispatch\">WithDispatch</a>&lt;T&gt;","synthetic":false,"types":["tracing_futures::WithDispatch"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()